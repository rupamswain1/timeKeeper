[{"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/index.js":"1","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/App.js":"2","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/reportWebVitals.js":"3","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/header/Header.component.jsx":"4","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/pages/homePage/Homepage.component.jsx":"5","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/totalTargetTime/TotalTargetTime.component.jsx":"6","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/store.js":"7","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/root-reducer.js":"8","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.reducer.js":"9","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.type.js":"10","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.action.js":"11","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/breakButtons/BreakButtons.component.jsx":"12","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/toDoTaskContainer/ToDoTaskContainer.component.jsx":"13","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/completedTaskListContainer/CompletedTaskListContainer.component.jsx":"14","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/addedTask/AddedTask.component.jsx":"15","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/breakButton/BreakButton.reducer.js":"16","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/breakButton/BreakButton.type.js":"17","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/breakButton/BreakButton.action.js":"18","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/task/Task.reducer.js":"19","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/task/Task.action.js":"20","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/task/Task.type.js":"21","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/root-saga.js":"22","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/breakButton/BreakButton.sagas.js":"23","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/logic/arrayToSeconds.js":"24","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/logic/getDate.js":"25","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/task/Task.saga.js":"26","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.sagas.js":"27","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/submitData/SubmitData.reducer.js":"28","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/submitData/SubmitData.type.js":"29","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/submitData/SubmitData.saga.js":"30","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/submitData/SubmitData.action.js":"31","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/doughnutChart/DoughnutChart.component.jsx":"32","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js":"33","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/finishDayButton/FinishDayButton.component.jsx":"34"},{"size":773,"mtime":1620620669336,"results":"35","hashOfConfig":"36"},{"size":247,"mtime":1620574191538,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1620572796062,"results":"38","hashOfConfig":"36"},{"size":614,"mtime":1620573552580,"results":"39","hashOfConfig":"36"},{"size":2070,"mtime":1621367261352,"results":"40","hashOfConfig":"36"},{"size":5398,"mtime":1621279817917,"results":"41","hashOfConfig":"36"},{"size":505,"mtime":1621164687380,"results":"42","hashOfConfig":"36"},{"size":765,"mtime":1621164645643,"results":"43","hashOfConfig":"36"},{"size":1778,"mtime":1621163294538,"results":"44","hashOfConfig":"36"},{"size":295,"mtime":1621163203496,"results":"45","hashOfConfig":"36"},{"size":720,"mtime":1621163247321,"results":"46","hashOfConfig":"36"},{"size":4612,"mtime":1621366060717,"results":"47","hashOfConfig":"36"},{"size":2458,"mtime":1621366667427,"results":"48","hashOfConfig":"36"},{"size":1179,"mtime":1621366574323,"results":"49","hashOfConfig":"36"},{"size":4344,"mtime":1621160432298,"results":"50","hashOfConfig":"36"},{"size":2185,"mtime":1621060410153,"results":"51","hashOfConfig":"36"},{"size":157,"mtime":1621059546376,"results":"52","hashOfConfig":"36"},{"size":315,"mtime":1621079165968,"results":"53","hashOfConfig":"36"},{"size":4886,"mtime":1621276739522,"results":"54","hashOfConfig":"36"},{"size":1057,"mtime":1621276721822,"results":"55","hashOfConfig":"36"},{"size":318,"mtime":1621276060309,"results":"56","hashOfConfig":"36"},{"size":543,"mtime":1621164425634,"results":"57","hashOfConfig":"36"},{"size":882,"mtime":1621102504764,"results":"58","hashOfConfig":"36"},{"size":1448,"mtime":1621146825214,"results":"59","hashOfConfig":"36"},{"size":255,"mtime":1621076810814,"results":"60","hashOfConfig":"36"},{"size":1122,"mtime":1621278119862,"results":"61","hashOfConfig":"36"},{"size":1296,"mtime":1621369816002,"results":"62","hashOfConfig":"36"},{"size":1070,"mtime":1621276394069,"results":"63","hashOfConfig":"36"},{"size":168,"mtime":1621161961023,"results":"64","hashOfConfig":"36"},{"size":991,"mtime":1621276194219,"results":"65","hashOfConfig":"36"},{"size":439,"mtime":1621164009573,"results":"66","hashOfConfig":"36"},{"size":1586,"mtime":1621365115624,"results":"67","hashOfConfig":"36"},{"size":2537,"mtime":1621364206105,"results":"68","hashOfConfig":"36"},{"size":815,"mtime":1621367851259,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"mclnj2",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/index.js",[],["145","146"],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/App.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/reportWebVitals.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/header/Header.component.jsx",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/pages/homePage/Homepage.component.jsx",["147","148","149","150"],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/totalTargetTime/TotalTargetTime.component.jsx",["151","152","153","154","155","156","157"],"import React,{useState,useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckIcon from '@material-ui/icons/Check';\nimport {saveTotalTime,updateCountDown} from '../../redux/totalTime/TotalTime.action';\nimport {ArrayToSeconds,SecondsToArray} from '../../logic/arrayToSeconds';\nimport './TotalTargetTime.scss' \nconst TotalTargetTime=()=>{\n    const dispatch=useDispatch();\n    const {key,totalTime,countDownProgress}=useSelector(state=>state.TotalTimeReducer);\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const [timeState,setTimeState]=useState([]);\n    console.log(timeState)\n    let timeArr=[]\n    console.log(timeArr)\n    useEffect(() => {\n        validatePrevValue();\n        const interval = setInterval(() => {\n            //console.log('countDownRunning')\n            if(timeState.length>0){\n               dispatch(updateCountDown());\n                validatePrevValue();\n                setTimeState(timeArr)\n                \n            }\n            console.log(timeState)\n        }, 1000);\n        return () => clearInterval(interval);\n      }, [timeState.length]);\n    //console.log(timeArr)\n    const validatePrevValue=()=>{\n        if((totalTime[key]!=undefined)&&(totalTime[key][getFullDate()]!=undefined)){\n            timeArr=SecondsToArray(totalTime[key][getFullDate()]);\n            setTimeState(timeArr)\n        }\n       \n    }\n    const handleChange=event=>{\n            validatePrevValue();\n            //timeArr.push(event.target.value)\n            timeArr[parseInt(event.target.name)]=event.target.value\n            if(parseInt(event.target.name)<5){\n                document.getElementById(parseInt(event.target.name)+1).disabled=false;\n                document.getElementById(parseInt(event.target.name)+1).focus();\n                document.getElementById(parseInt(event.target.name)+1).value='';\n                if(parseInt(event.target.name)!=0){\n                document.getElementById(parseInt(event.target.name)).disabled=true;\n                }\n            }\n            else{\n                document.getElementById(parseInt(event.target.name)).blur();\n                document.getElementById(parseInt(event.target.name)).disabled=true;\n            }\n            console.log(timeArr)\n           //console.log((parseInt(timeArr[0])*10+(parseInt(timeArr[1])))*60*60)    \n    }\n    const clearTxt=event=>{\n        document.getElementById(parseInt(event.target.name)).value='';\n    }\n    let newTime=undefined\n    const getFullDate=()=>{\n        let newDate=new Date()\n            let date = newDate.getDate();\n            let month = newDate.getMonth() + 1;\n            let year = newDate.getFullYear();\n            return(date.toString()+month.toString()+year.toString());\n    }\n    const submitTime=()=>{\n        console.log(timeArr)\n        setTimeState(timeArr)\n        const totalSeconds=ArrayToSeconds(timeArr);\n        console.log(totalSeconds)\n        dispatch(saveTotalTime(totalSeconds))\n        \n           \n        //newTime=totalTime[key][getFullDate()];\n        //console.log(newTime)\n    }\n    let cls='timeBox';\n    if(timeState.length>6){\n        cls='timeBox-negative'\n    }\n    let displayCondition=false;\n    if(timeState.length>0 && Object.keys(taskList).length>0){\n        displayCondition=true;\n    }\n    return(\n        <div className='timcardsContainer'>\n            {timeState.length>6?<span className='timeBoxNegative'>-</span>:''}\n            \n            <input className={cls} placeholder='H' type='text' name='0' onFocus={clearTxt} id='0' value={(displayCondition)?timeState[0]:timeArr[0]} maxlength='1' onChange={handleChange}>\n            </input>\n            <input disabled className={cls} placeholder='H' type='text' name='1' onFocus={clearTxt} id='1' value={displayCondition?timeState[1]:timeArr[1]} maxlength='1' onChange={handleChange}>\n            </input>\n            <div className='timerText'>H</div>\n            <input disabled className={cls} placeholder='M' type='text' name='2' onFocus={clearTxt} id='2' value={displayCondition?timeState[2]:timeArr[2]} maxlength='1' onChange={handleChange}>\n            </input>\n            <input disabled className={cls} placeholder='M' type='text' name='3' onFocus={clearTxt} id='3' value={displayCondition?timeState[3]:timeArr[3]} maxlength='1' onChange={handleChange}>\n            </input>\n                <div className='timerText'>M</div>\n                <input disabled className={cls} placeholder='S' type='text' name='4' onFocus={clearTxt} id='4' value={displayCondition?timeState[4]:timeArr[4]} maxlength='1' onChange={handleChange}>\n            </input>\n            <input disabled className={cls} placeholder='S' type='text' name='5' onFocus={clearTxt} id='5' onfocus='this.value=\"\"' value={displayCondition?timeState[5]:timeArr[5]} maxlength='1' onChange={handleChange}>\n            </input>\n                <div className='timerText'>S</div>\n            {Object.keys(taskList).length>0?'':\n            <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className='saveTimeBtn'\n            startIcon={<CheckIcon />}\n            onClick={()=>submitTime()}\n            >\n                Save Time\n            </Button>\n            }\n\n        </div>\n\n    )\n}\n\nexport default TotalTargetTime;","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/store.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/root-reducer.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.reducer.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.type.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.action.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/breakButtons/BreakButtons.component.jsx",["158"],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/toDoTaskContainer/ToDoTaskContainer.component.jsx",["159","160","161","162","163"],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/completedTaskListContainer/CompletedTaskListContainer.component.jsx",["164"],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/addedTask/AddedTask.component.jsx",["165","166"],"import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {removeTask,pauseTask,startTask,completeTask} from '../../redux/task/Task.action'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst AddedTask=({completed,bgColor,taskName,paused,percentage,type})=>{\n    \n    const dispatch=useDispatch();\n    const containerStyle={\n        position:'relative',\n        height:'15%',\n        width:'100%',\n        backgroundColor: \"#e0e0de\",\n        borderRadius: 5,\n        'margin-top':5,\n        display:'flex',\n    }\n\n    const fillerStyle = {\n        height: '100%',\n        width: `${percentage}%`,\n        backgroundColor: `${bgColor}`,\n        borderRadius: 'inherit',\n        textAlign: 'right',\n        borderRadius: 50,\n        transition: 'width 1s ease-in-out',\n      }\n\n      const labelStyle = {\n        position:'absolute',\n        top:'1vh',\n        left:'4.5vw',\n        color: 'black',\n        fontWeight: 'bold',\n        'z-index':-1,\n        \n      }\n\n      const taskContentStyle={\n        position:'absolute',\n        display:'flex',\n        right:'50%',\n        top:'10%',\n        textAlign:'right',\n\n        'font-weight':'bold',\n      }\n      const iconsListStyle={\n        position:'absolute',\n        top:'0.5vh',\n        display:'flex',\n        'padding-left':'8.5vw',\n        textAlign: 'right'\n      }\n      const taskNameStyle={\n          position:'absolute',\n          top:'1vh',\n          color:'black',\n          right:'1.9vw',\n          'text-align':'left',\n          width:'11vw',\n          'margin-left':'10%',\n      }\n      \n\n    return(\n        <Tooltip title={taskName.toUpperCase()} placement=\"right-start\" arrow>\n        <div className='taskMainContainer' style={containerStyle}>\n            <div className='contentContainer' style={fillerStyle}>\n               \n            </div>\n            <div className='taskContent' style={taskContentStyle}>\n                <span style={labelStyle}>{`${percentage}%`}</span>\n                <div className='taskName' style={taskNameStyle}>\n                    {`${taskName.toUpperCase().slice(0,14)}${taskName.length>14?'...':''}`}\n                </div>\n                {completed?'':\n            \n                \n                <div className='iconsList' style={iconsListStyle}>\n                    {paused\n                        ?\n                            <Tooltip title={`Start ${taskName.toUpperCase()}`}  arrow>\n                                <div className='playButton'>\n                                    <PlayCircleOutlineIcon key={`${taskName}-playBtn`} onClick={()=>dispatch(startTask(taskName))}/>\n                                </div>\n                            </Tooltip>\n                        :\n                            <Tooltip title={`Pause ${taskName.toUpperCase()}`}  arrow>\n                                <div className='playButton'>\n                                    <PauseCircleOutlineIcon key={`${taskName}-pauseBtn`} onClick={()=>dispatch(pauseTask(taskName))}/>\n                                </div>\n                            </Tooltip>\n                    }\n                    \n                    {type?'':\n                        <Tooltip title={`Mark Complete ${taskName.toUpperCase()}`}  arrow>\n                            <div className='completedButton'>\n                                <DoneOutlineIcon onClick={()=>dispatch(completeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                    }\n                    {type?'':percentage>0?'':\n                        <Tooltip title={`Remove ${taskName.toUpperCase()}`}  arrow>\n                            <div className='removeButton'>\n                                <CancelIcon key={`${taskName}-cancelBtn`} onClick={()=>dispatch(removeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                    }\n                    \n                     \n                </div>\n                }\n            </div>\n        </div>\n        </Tooltip>\n    )\n}\n\nexport default AddedTask;","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/breakButton/BreakButton.reducer.js",["167"],"import BreakButtonType from './BreakButton.type';\n\nconst INITIAL_STATE={\n    instagram:{isActive:false,time:0,color:'rgb(243, 9, 192)'},\n    faceBook:{isActive:false,time:0,color:'rgb(10, 79, 158)'},\n    youtube:{isActive:false,time:0,color:'rgb(192, 9, 9)'},\n    call:{isActive:false,time:0,color:'rgb(109, 75, 204)'},\n    messaging:{isActive:false,time:0,color:'rgb(43, 192, 43)'},\n    sleep:{isActive:false,time:0,color:'rgb(36, 109, 128)'},\n    excercise:{isActive:false,time:0,color:'rgb(13, 121, 94)'},\n    tea:{isActive:false,time:0,color:'rgb(102, 50, 7)'},\n    food:{isActive:false,time:0,color:'rgb(48, 197, 185)'},\n    releaseAll:{isActive:true,time:0,color:'rgb(48, 1, 1)'},\n    miscelaneous:{isActive:false,time:0,color:'rgb(115, 20, 223)'},\n    currentActive:'releaseAll',\n    \n}\n\n\nexport const BreakButtonReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        \n        case BreakButtonType.START_BREAK:\n            let prevActive='';\n            let btnName=action.breakName;\n            console.log(btnName)\n            if(action.breakName!='releaseAll'){\n                \n                state[state.currentActive].isActive=false;\n                state[action.breakName].isActive=true;\n                state.currentActive=action.breakName;\n                prevActive=state.currentActive;\n            }\n            else{\n                \n                state[state.currentActive].isActive=false;\n                state.currentActive=action.breakName;\n                prevActive=state.currentActive;\n            }\n            return{\n                ...state,\n                [btnName]:{...state[btnName]},\n                [prevActive]:{...state[prevActive]}\n            }\n        case BreakButtonType.PAUSE_BREAK:\n            state[state.currentActive].isActive=false;\n            return{\n                ...state,\n                [action.breakName]:{...state[action.breakName]},\n            }\n        case BreakButtonType.GET_BREAK_COLOR:\n            let color=state[action.breakName].color;\n            console.log(color)\n            console.log(state[action.breakName])\n            return color;\n        default:\n            return state;\n    }\n}\n\n","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/breakButton/BreakButton.type.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/breakButton/BreakButton.action.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/task/Task.reducer.js",["168","169","170","171","172","173","174","175"],"import { pauseTask } from './Task.action';\nimport TaskType from './Task.type';\n\nconst INITIAL_STATUS={\n    taskList:{},\n    activeTask:null\n}\n\n\nexport const TaskReducer=(state=INITIAL_STATUS,action)=>{\n    switch(action.type){\n        case TaskType.ADD_TASK:\n            if(state.taskList[action.taskName]==undefined){\n                let taskData={\n                    time:0,\n                    paused:true,\n                    isCompleted:false,\n                    color:'rgb(239, 68, 11)',\n                    percentage:0,\n                }\n                state.taskList[action.taskName]=taskData;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                \n            }\n        case TaskType.REMOVE_TASK:\n            delete state.taskList[action.taskName];\n            if(state.activeTask===action.taskName){\n                state.activeTask=null;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.PAUSE_TASK:\n            state.taskList[action.taskName].paused=true;\n            state.activeTask=null;\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.START_TASK:\n            for(var key in state.taskList){\n                state.taskList[key].paused=true;\n            }\n            state.taskList[action.taskName].paused=false;\n            if(action.seconds!=undefined && action.totalTime!=undefined){\n            state.taskList[action.taskName].time=parseInt(state.taskList[action.taskName].time)+parseInt(action.seconds);\n            console.log(action.totalTime);\n            console.log(state.taskList[action.taskName].time)\n            \n            state.taskList[action.taskName].percentage=(((state.taskList[action.taskName].time)/(parseInt(action.totalTime)))*parseInt(100)).toFixed(1);\n            }\n            state.activeTask=action.taskName;\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.COMPLETED_TASK:\n            state.taskList[action.taskName].isCompleted=true;\n            if(state.activeTask===action.taskName){\n                state.activeTask=null;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.ADD_BREAK_TASK:\n            for(var key in state.taskList){\n                //console.log(key)\n                if(key!=action.taskName){\n                    state.taskList[key].paused=true;\n                }\n                //console.log(state.taskList[key].pasued)\n            }\n            if(action.taskName!='releaseAll'){\n                \n                //console.log(state.taskList)\n                if((state.taskList[action.taskName]===undefined)){\n                let taskData={\n                    time:0,\n                    paused:false,\n                    isCompleted:false,\n                    color:action.color,\n                    percentage:0,\n                    type:'break',\n                }\n                state.taskList[action.taskName]=taskData;\n                state.activeTask=action.taskName\n                }\n                else{\n\n                    //console.log('********************************************************')\n                    //console.log(state.taskList[action.taskName].paused)\n                    if(!(state.taskList[action.taskName].paused)){\n                        \n                        state.taskList[action.taskName].paused=true;\n                        state.activeTask=null\n                    }\n                    else{\n                        \n                        state.taskList[action.taskName].paused=false;\n                        state.activeTask=action.taskName\n                    }\n\n                }\n\n            }\n            \n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n            case TaskType.REMOVE_ALL_TASK:\n                return{\n                    ...state,\n                    taskList:{},\n                    activeTask:null\n                }\n            case TaskType.COMPLETE_ALL_TASK:\n                for(var key in state.taskList){\n                    state.taskList[key].isCompleted=true;\n                }\n                console.log(state.taskList[key])\n                return{\n                    ...state,\n                    activeTask:null,\n                    taskList:{...state.taskList}\n                }\n        default:\n            return state;\n    }\n}","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/task/Task.action.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/task/Task.type.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/root-saga.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/breakButton/BreakButton.sagas.js",["176","177","178","179"],"import BreakButtonType from './BreakButton.type';\nimport {startBreak,getBreakColor} from './BreakButton.action';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {addBreaktask} from '../task/Task.action';\nimport {setCountDownTrue,pauseCountDown} from '../totalTime/TotalTime.action';\n\nfunction* startBreakInTask({type,breakName}){\n    let taskName=breakName;\n    let breakButtonSatate=yield select(state=>state.BreakButtonReducer);\n    let taskReducer=yield select(state=>state.TaskReducer);\n    yield put(addBreaktask(breakName,breakButtonSatate[breakName].color));\n    if((breakName!='releaseAll') && (taskReducer.taskList[breakName].paused===false)){\n        yield put(setCountDownTrue());\n    }\n    else{\n        yield put(pauseCountDown());\n    }\n    \n    \n}\nexport function* startBreakSaga(){\n    yield takeEvery(BreakButtonType.START_BREAK,startBreakInTask)\n\n}","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/logic/arrayToSeconds.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/logic/getDate.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/task/Task.saga.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.sagas.js",["180","181"],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/submitData/SubmitData.reducer.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/submitData/SubmitData.type.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/submitData/SubmitData.saga.js",["182"],"import SubmitDataType from './SubmitData.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {startBreak} from '../breakButton/BreakButton.action'\nimport {submitDataInProgerss} from '../submitData/SubmitData.action'\nimport {removeAllTask,completeAll,pauseTask} from '../task/Task.action';\nimport {removeAllTime} from '../totalTime/TotalTime.action';\nfunction* startSubmitProcess(){\n\n    console.log(1)\n    yield put(startBreak('releaseAll'));\n    console.log(2)\n    yield put(completeAll())\n    const taskReducer=yield select(state=>state.TaskReducer.taskList)\n    const breakButtonReducer=yield select(state=>state.BreakButtonReducer)\n    const totalTimeReducer=yield select(state=>state.TotalTimeReducer)\n    yield put(submitDataInProgerss(taskReducer,breakButtonReducer,totalTimeReducer))\n    yield put(removeAllTask());\n    yield put(removeAllTime());\n}\n\n\nexport function* startSubmit(){\n    yield takeEvery(SubmitDataType.SUBMIT_ALL_DATA_START, startSubmitProcess);\n}","/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/submitData/SubmitData.action.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/doughnutChart/DoughnutChart.component.jsx",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js",[],"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/finishDayButton/FinishDayButton.component.jsx",["183"],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":16,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"188","severity":1,"message":"192","line":2,"column":21,"nodeType":"190","messageId":"191","endLine":2,"endColumn":32},{"ruleId":"188","severity":1,"message":"193","line":11,"column":8,"nodeType":"190","messageId":"191","endLine":11,"endColumn":22},{"ruleId":"188","severity":1,"message":"194","line":14,"column":11,"nodeType":"190","messageId":"191","endLine":14,"endColumn":19},{"ruleId":"188","severity":1,"message":"195","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":18},{"ruleId":"188","severity":1,"message":"196","line":11,"column":26,"nodeType":"190","messageId":"191","endLine":11,"endColumn":43},{"ruleId":"197","severity":1,"message":"198","line":30,"column":10,"nodeType":"199","endLine":30,"endColumn":28,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":33,"column":27,"nodeType":"203","messageId":"204","endLine":33,"endColumn":29},{"ruleId":"201","severity":1,"message":"202","line":33,"column":71,"nodeType":"203","messageId":"204","endLine":33,"endColumn":73},{"ruleId":"201","severity":1,"message":"202","line":47,"column":47,"nodeType":"203","messageId":"204","endLine":47,"endColumn":49},{"ruleId":"188","severity":1,"message":"205","line":61,"column":9,"nodeType":"190","messageId":"191","endLine":61,"endColumn":16},{"ruleId":"188","severity":1,"message":"196","line":22,"column":22,"nodeType":"190","messageId":"191","endLine":22,"endColumn":39},{"ruleId":"188","severity":1,"message":"206","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":15},{"ruleId":"188","severity":1,"message":"207","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":17},{"ruleId":"188","severity":1,"message":"208","line":8,"column":8,"nodeType":"190","messageId":"191","endLine":8,"endColumn":11},{"ruleId":"188","severity":1,"message":"209","line":9,"column":8,"nodeType":"190","messageId":"191","endLine":9,"endColumn":15},{"ruleId":"188","severity":1,"message":"210","line":16,"column":16,"nodeType":"190","messageId":"191","endLine":16,"endColumn":28},{"ruleId":"188","severity":1,"message":"210","line":8,"column":16,"nodeType":"190","messageId":"191","endLine":8,"endColumn":28},{"ruleId":"188","severity":1,"message":"192","line":2,"column":9,"nodeType":"190","messageId":"191","endLine":2,"endColumn":20},{"ruleId":"211","severity":1,"message":"212","line":28,"column":9,"nodeType":"213","messageId":"204","endLine":28,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":27,"column":32,"nodeType":"203","messageId":"204","endLine":27,"endColumn":34},{"ruleId":"188","severity":1,"message":"214","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":19},{"ruleId":"201","severity":1,"message":"215","line":13,"column":47,"nodeType":"203","messageId":"204","endLine":13,"endColumn":49},{"ruleId":"201","severity":1,"message":"202","line":51,"column":30,"nodeType":"203","messageId":"204","endLine":51,"endColumn":32},{"ruleId":"201","severity":1,"message":"202","line":51,"column":61,"nodeType":"203","messageId":"204","endLine":51,"endColumn":63},{"ruleId":"216","severity":1,"message":"217","line":75,"column":21,"nodeType":"190","messageId":"218","endLine":75,"endColumn":24},{"ruleId":"201","severity":1,"message":"202","line":77,"column":23,"nodeType":"203","messageId":"204","endLine":77,"endColumn":25},{"ruleId":"201","severity":1,"message":"202","line":82,"column":31,"nodeType":"203","messageId":"204","endLine":82,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":128,"column":25,"nodeType":"190","messageId":"218","endLine":128,"endColumn":28},{"ruleId":"188","severity":1,"message":"219","line":2,"column":9,"nodeType":"190","messageId":"191","endLine":2,"endColumn":19},{"ruleId":"188","severity":1,"message":"220","line":2,"column":20,"nodeType":"190","messageId":"191","endLine":2,"endColumn":33},{"ruleId":"188","severity":1,"message":"221","line":8,"column":9,"nodeType":"190","messageId":"191","endLine":8,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":12,"column":18,"nodeType":"203","messageId":"204","endLine":12,"endColumn":20},{"ruleId":"188","severity":1,"message":"222","line":6,"column":9,"nodeType":"190","messageId":"191","endLine":6,"endColumn":24},{"ruleId":"188","severity":1,"message":"223","line":12,"column":34,"nodeType":"190","messageId":"191","endLine":12,"endColumn":43},{"ruleId":"188","severity":1,"message":"214","line":5,"column":35,"nodeType":"190","messageId":"191","endLine":5,"endColumn":44},{"ruleId":"188","severity":1,"message":"210","line":7,"column":16,"nodeType":"190","messageId":"191","endLine":7,"endColumn":28},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'createSelector' is defined but never used.","'dispatch' is assigned a value but never used.","'IconButton' is defined but never used.","'countDownProgress' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'timeArr', 'timeState', and 'validatePrevValue'. Either include them or remove the dependency array.","ArrayExpression",["226"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'newTime' is assigned a value but never used.","'Tooltip' is defined but never used.","'TextField' is defined but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'originalTime' is assigned a value but never used.","no-dupe-keys","Duplicate key 'borderRadius'.","ObjectExpression","'pauseTask' is defined but never used.","Expected '===' and instead saw '=='.","no-redeclare","'key' is already defined.","redeclared","'startBreak' is defined but never used.","'getBreakColor' is defined but never used.","'taskName' is assigned a value but never used.","'submitDataStart' is defined but never used.","'totalTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},"Update the dependencies array to be: [dispatch, timeArr, timeState, timeState.length, validatePrevValue]",{"range":"229","text":"230"},[1212,1230],"[dispatch, timeArr, timeState, timeState.length, validatePrevValue]"]