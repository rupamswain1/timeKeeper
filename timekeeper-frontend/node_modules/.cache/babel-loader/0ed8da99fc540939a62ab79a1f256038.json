{"ast":null,"code":"export const ArrayToSeconds = timeArr => {\n  const hh = parseInt(timeArr[0]) * 10 + parseInt(timeArr[1]);\n  const mm = parseInt(timeArr[2]) * 10 + parseInt(timeArr[3]);\n  const ss = parseInt(timeArr[4]) * 10 + parseInt(timeArr[5]);\n  let seconds = hh * 3600 + mm * 60 + ss;\n  console.log(seconds);\n  return seconds;\n};\n_c = ArrayToSeconds;\nexport const SecondsToArray = timeInSec => {\n  let totalSeconds = parseInt(timeInsec);\n  let hour = Math.floor(totalSeconds / 3600);\n  let minutes = Math.floor((totalSeconds - hour * 3600) / 60);\n  let seconds = totalSeconds - hours * 3600 - minutes * 60;\n};\n_c2 = SecondsToArray;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ArrayToSeconds\");\n$RefreshReg$(_c2, \"SecondsToArray\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/logic/arrayToSeconds.js"],"names":["ArrayToSeconds","timeArr","hh","parseInt","mm","ss","seconds","console","log","SecondsToArray","timeInSec","totalSeconds","timeInsec","hour","Math","floor","minutes","hours"],"mappings":"AACA,OAAO,MAAMA,cAAc,GAAEC,OAAD,IAAW;AACnC,QAAMC,EAAE,GAAEC,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,GAAqB,EAAtB,GAA0BE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAA3C;AACA,QAAMG,EAAE,GAAED,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,GAAqB,EAAtB,GAA0BE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAA3C;AACA,QAAMI,EAAE,GAAEF,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,GAAqB,EAAtB,GAA0BE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAA3C;AACA,MAAIK,OAAO,GAAEJ,EAAE,GAAC,IAAJ,GAAWE,EAAE,GAAC,EAAd,GAAmBC,EAA/B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAOA,OAAP;AACH,CAPM;KAAMN,c;AASb,OAAO,MAAMS,cAAc,GAAEC,SAAD,IAAa;AACrC,MAAIC,YAAY,GAACR,QAAQ,CAACS,SAAD,CAAzB;AACA,MAAIC,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWJ,YAAY,GAAC,IAAxB,CAAT;AACA,MAAIK,OAAO,GAACF,IAAI,CAACC,KAAL,CAAW,CAACJ,YAAY,GAAEE,IAAI,GAAC,IAApB,IAA2B,EAAtC,CAAZ;AACA,MAAIP,OAAO,GAACK,YAAY,GAAEM,KAAK,GAAC,IAApB,GAA2BD,OAAO,GAAC,EAA/C;AACH,CALM;MAAMP,c","sourcesContent":["\nexport const ArrayToSeconds=(timeArr)=>{\n    const hh=(parseInt(timeArr[0])*10)+parseInt(timeArr[1]);\n    const mm=(parseInt(timeArr[2])*10)+parseInt(timeArr[3]);\n    const ss=(parseInt(timeArr[4])*10)+parseInt(timeArr[5]);\n    let seconds=(hh*3600)+(mm*60)+(ss);\n    console.log(seconds)\n    return(seconds)\n}\n\nexport const SecondsToArray=(timeInSec)=>{\n    let totalSeconds=parseInt(timeInsec);\n    let hour=Math.floor(totalSeconds/3600);\n    let minutes=Math.floor((totalSeconds-(hour*3600))/60);\n    let seconds=totalSeconds-(hours*3600)-(minutes*60);\n}\n\n"]},"metadata":{},"sourceType":"module"}