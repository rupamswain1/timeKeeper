{"ast":null,"code":"var _jsxFileName = \"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/addedTask/AddedTask.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeTask, pauseTask, startTask, completeTask } from '../../redux/task/Task.action';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddedTask = ({\n  completed,\n  bgColor,\n  taskName,\n  paused,\n  percentage,\n  type\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const containerStyle = {\n    position: 'relative',\n    height: '15%',\n    width: '100%',\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 5,\n    'margin-top': 5,\n    display: 'flex'\n  };\n  const fillerStyle = {\n    height: '100%',\n    width: `${percentage}%`,\n    backgroundColor: `${bgColor}`,\n    borderRadius: 'inherit',\n    textAlign: 'right',\n    borderRadius: 50,\n    transition: 'width 1s ease-in-out'\n  };\n  const labelStyle = {\n    position: 'absolute',\n    top: '1vh',\n    left: '6vw',\n    color: 'black',\n    fontWeight: 'bold',\n    'z-index': -1\n  };\n  const taskContentStyle = {\n    position: 'absolute',\n    display: 'flex',\n    right: '50%',\n    top: '10%',\n    textAlign: 'right',\n    'font-weight': 'bold'\n  };\n  const iconsListStyle = {\n    position: 'absolute',\n    top: '0.5vh',\n    display: 'flex',\n    'padding-left': '8.5vw',\n    textAlign: 'right'\n  };\n  const taskNameStyle = {\n    position: 'absolute',\n    top: '1vh',\n    color: 'black',\n    right: '1.9vw',\n    'text-align': 'left',\n    width: '11vw',\n    'margin-left': '10%'\n  };\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: taskName.toUpperCase(),\n    placement: \"right-start\",\n    arrow: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskMainContainer\",\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentContainer\",\n        style: fillerStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskContent\",\n        style: taskContentStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: labelStyle,\n          children: `${percentage}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskName\",\n          style: taskNameStyle,\n          children: `${taskName.toUpperCase().slice(0, 14)}${taskName.length > 14 ? '...' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), completed ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"iconsList\",\n          style: iconsListStyle,\n          children: [paused ? /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `Start ${taskName.toUpperCase()}`,\n            arrow: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playButton\",\n              children: /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n                onClick: () => dispatch(startTask(taskName))\n              }, `${taskName}-playBtn`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `Pause ${taskName.toUpperCase()}`,\n            arrow: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playButton\",\n              children: /*#__PURE__*/_jsxDEV(PauseCircleOutlineIcon, {\n                onClick: () => dispatch(pauseTask(taskName))\n              }, `${taskName}-pauseBtn`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), type ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completedButton\",\n            children: /*#__PURE__*/_jsxDEV(DoneOutlineIcon, {\n              onClick: () => dispatch(completeTask(taskName))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), type ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"removeButton\",\n            children: /*#__PURE__*/_jsxDEV(CancelIcon, {\n              onClick: () => dispatch(removeTask(taskName))\n            }, `${taskName}-cancelBtn`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddedTask, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddedTask;\nexport default AddedTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddedTask\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/addedTask/AddedTask.component.jsx"],"names":["React","useSelector","useDispatch","removeTask","pauseTask","startTask","completeTask","PlayCircleOutlineIcon","PauseCircleOutlineIcon","DoneOutlineIcon","CancelIcon","Tooltip","AddedTask","completed","bgColor","taskName","paused","percentage","type","dispatch","containerStyle","position","height","width","backgroundColor","borderRadius","display","fillerStyle","textAlign","transition","labelStyle","top","left","color","fontWeight","taskContentStyle","right","iconsListStyle","taskNameStyle","toUpperCase","slice","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {removeTask,pauseTask,startTask,completeTask} from '../../redux/task/Task.action'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst AddedTask=({completed,bgColor,taskName,paused,percentage,type})=>{\n    \n    const dispatch=useDispatch();\n    const containerStyle={\n        position:'relative',\n        height:'15%',\n        width:'100%',\n        backgroundColor: \"#e0e0de\",\n        borderRadius: 5,\n        'margin-top':5,\n        display:'flex',\n    }\n\n    const fillerStyle = {\n        height: '100%',\n        width: `${percentage}%`,\n        backgroundColor: `${bgColor}`,\n        borderRadius: 'inherit',\n        textAlign: 'right',\n        borderRadius: 50,\n        transition: 'width 1s ease-in-out',\n      }\n\n      const labelStyle = {\n        position:'absolute',\n        top:'1vh',\n        left:'6vw',\n        color: 'black',\n        fontWeight: 'bold',\n        'z-index':-1,\n        \n      }\n\n      const taskContentStyle={\n        position:'absolute',\n        display:'flex',\n        right:'50%',\n        top:'10%',\n        textAlign:'right',\n\n        'font-weight':'bold',\n      }\n      const iconsListStyle={\n        position:'absolute',\n        top:'0.5vh',\n        display:'flex',\n        'padding-left':'8.5vw',\n        textAlign: 'right'\n      }\n      const taskNameStyle={\n          position:'absolute',\n          top:'1vh',\n          color:'black',\n          right:'1.9vw',\n          'text-align':'left',\n          width:'11vw',\n          'margin-left':'10%',\n      }\n      \n\n    return(\n        <Tooltip title={taskName.toUpperCase()} placement=\"right-start\" arrow>\n        <div className='taskMainContainer' style={containerStyle}>\n            <div className='contentContainer' style={fillerStyle}>\n               \n            </div>\n            <div className='taskContent' style={taskContentStyle}>\n                <span style={labelStyle}>{`${percentage}%`}</span>\n                <div className='taskName' style={taskNameStyle}>\n                    {`${taskName.toUpperCase().slice(0,14)}${taskName.length>14?'...':''}`}\n                </div>\n                {completed?'':\n            \n                \n                <div className='iconsList' style={iconsListStyle}>\n                    {paused\n                        ?\n                            <Tooltip title={`Start ${taskName.toUpperCase()}`}  arrow>\n                                <div className='playButton'>\n                                    <PlayCircleOutlineIcon key={`${taskName}-playBtn`} onClick={()=>dispatch(startTask(taskName))}/>\n                                </div>\n                            </Tooltip>\n                        :\n                            <Tooltip title={`Pause ${taskName.toUpperCase()}`}  arrow>\n                                <div className='playButton'>\n                                    <PauseCircleOutlineIcon key={`${taskName}-pauseBtn`} onClick={()=>dispatch(pauseTask(taskName))}/>\n                                </div>\n                            </Tooltip>\n                    }\n                    \n                    {type?'':\n                        <div className='completedButton'>\n                            <DoneOutlineIcon onClick={()=>dispatch(completeTask(taskName))}/>\n                        </div>\n                    }\n                    {type?'':\n                        <div className='removeButton'>\n                            <CancelIcon key={`${taskName}-cancelBtn`} onClick={()=>dispatch(removeTask(taskName))}/>\n                        </div>\n                    }\n                    \n                    \n                </div>\n                }\n            </div>\n        </div>\n        </Tooltip>\n    )\n}\n\nexport default AddedTask;"]},"metadata":{},"sourceType":"module"}