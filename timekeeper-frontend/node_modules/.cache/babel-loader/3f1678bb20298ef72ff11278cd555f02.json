{"ast":null,"code":"var _jsxFileName = \"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeComparisonBarChart = () => {\n  _s();\n\n  const {\n    key,\n    data\n  } = useSelector(state => state.SubmitDataReducer);\n  let chartLabels = [];\n  let taskHour = [];\n  let bgColors = [];\n  let borderColors = [];\n  console.log(data[key]);\n  console.log(Object.keys(data[key]).length);\n\n  if (Object.keys(data).length > 0) {\n    let obj = data[key].taskData;\n    console.log(obj);\n\n    for (var k in obj) {\n      chartLabels.push(k);\n      taskHour.push((obj[k].time / 3600).toFixed(2));\n      bgColors.push(obj[k].color);\n      borderColors.push('rgb(0,0,0)');\n    }\n  }\n\n  const Doughnutdata = {\n    labels: chartLabels,\n    datasets: [{\n      label: '# of Votes',\n      data: taskHour,\n      backgroundColor: bgColors,\n      borderColor: borderColors,\n      borderWidth: 5,\n      hoverOffset: 20\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doughnutChartContainer\",\n    children: Object.keys(data[key]).length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: Doughnutdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TimeComparisonBarChart, \"oydWtUrdpbsDgJaYChJFpjNvfrQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = TimeComparisonBarChart;\nexport default TimeComparisonBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeComparisonBarChart\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js"],"names":["React","useSelector","Bar","TimeComparisonBarChart","key","data","state","SubmitDataReducer","chartLabels","taskHour","bgColors","borderColors","console","log","Object","keys","length","obj","taskData","k","push","time","toFixed","color","Doughnutdata","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverOffset"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;;AAEA,MAAMC,sBAAsB,GAAC,MAAI;AAAA;;AAC7B,QAAM;AAACC,IAAAA,GAAD;AAAKC,IAAAA;AAAL,MAAWJ,WAAW,CAACK,KAAK,IAAEA,KAAK,CAACC,iBAAd,CAA5B;AACA,MAAIC,WAAW,GAAC,EAAhB;AACA,MAAIC,QAAQ,GAAC,EAAb;AACA,MAAIC,QAAQ,GAAC,EAAb;AACA,MAAIC,YAAY,GAAC,EAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACD,GAAD,CAAhB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYV,IAAI,CAACD,GAAD,CAAhB,EAAuBY,MAAnC;;AACA,MAAGF,MAAM,CAACC,IAAP,CAAYV,IAAZ,EAAkBW,MAAlB,GAAyB,CAA5B,EAA8B;AAC9B,QAAIC,GAAG,GAACZ,IAAI,CAACD,GAAD,CAAJ,CAAUc,QAAlB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;;AACA,SAAI,IAAIE,CAAR,IAAaF,GAAb,EAAiB;AACbT,MAAAA,WAAW,CAACY,IAAZ,CAAiBD,CAAjB;AAEAV,MAAAA,QAAQ,CAACW,IAAT,CAAc,CAAEH,GAAG,CAACE,CAAD,CAAH,CAAOE,IAAR,GAAc,IAAf,EAAqBC,OAArB,CAA6B,CAA7B,CAAd;AACAZ,MAAAA,QAAQ,CAACU,IAAT,CAAcH,GAAG,CAACE,CAAD,CAAH,CAAOI,KAArB;AACAZ,MAAAA,YAAY,CAACS,IAAb,CAAkB,YAAlB;AACC;AACJ;;AAED,QAAMI,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAEjB,WADS;AAEjBkB,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,YADT;AAEEtB,MAAAA,IAAI,EAAEI,QAFR;AAGEmB,MAAAA,eAAe,EAAElB,QAHnB;AAIEmB,MAAAA,WAAW,EAAElB,YAJf;AAKEmB,MAAAA,WAAW,EAAE,CALf;AAMEC,MAAAA,WAAW,EAAE;AANf,KADQ;AAFO,GAArB;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cACKjB,MAAM,CAACC,IAAP,CAAYV,IAAI,CAACD,GAAD,CAAhB,EAAuBY,MAAvB,GAA8B,CAA9B,gBACD,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEQ;AAAX;AAAA;AAAA;AAAA;AAAA,YADC,GAEA;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAxCD;;GAAMrB,sB;UACeF,W;;;KADfE,sB;AA0CN,eAAeA,sBAAf","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Bar} from 'react-chartjs-2';\n\nconst TimeComparisonBarChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    let chartLabels=[];\n    let taskHour=[];\n    let bgColors=[]\n    let borderColors=[]\n    console.log(data[key]);\n    console.log(Object.keys(data[key]).length)\n    if(Object.keys(data).length>0){\n    let obj=data[key].taskData;\n    console.log(obj)\n    for(var k in obj){\n        chartLabels.push(k);\n        \n        taskHour.push(((obj[k].time)/3600).toFixed(2))\n        bgColors.push(obj[k].color)\n        borderColors.push('rgb(0,0,0)')\n        }\n    }\n   \n    const Doughnutdata = {\n        labels: chartLabels,\n        datasets: [\n          {\n            label: '# of Votes',\n            data: taskHour,\n            backgroundColor: bgColors,\n            borderColor: borderColors,\n            borderWidth: 5,\n            hoverOffset: 20\n          },\n        ],\n      };\n    return(\n        <div className='doughnutChartContainer'>\n            {Object.keys(data[key]).length>0?\n            <Bar data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeComparisonBarChart;\n"]},"metadata":{},"sourceType":"module"}