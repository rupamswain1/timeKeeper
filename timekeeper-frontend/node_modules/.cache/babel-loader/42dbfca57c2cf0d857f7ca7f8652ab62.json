{"ast":null,"code":"import BreakButtonType from './BreakButton.type';\nconst INITIAL_STATE = {\n  instagram: {\n    isActive: false,\n    time: 0\n  },\n  faceBook: {\n    isActive: false,\n    time: 0\n  },\n  youtube: {\n    isActive: false,\n    time: 0\n  },\n  call: {\n    isActive: false,\n    time: 0\n  },\n  messaging: {\n    isActive: false,\n    time: 0\n  },\n  sleep: {\n    isActive: false,\n    time: 0\n  },\n  excercise: {\n    isActive: false,\n    time: 0\n  },\n  tea: {\n    isActive: false,\n    time: 0\n  },\n  food: {\n    isActive: false,\n    time: 0\n  },\n  releaseAll: {\n    isActive: true,\n    time: 0\n  },\n  currentActive: 'releaseAll'\n};\nexport const BreakButtonReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BreakButtonType.START_BREAK:\n      let prevActive = '';\n      console.log(state[action.breakName]);\n\n      if (action.breakName != 'releaseAll') {\n        state[state.currentActive].isActive = false;\n        state[action.breakName].isActive = true;\n        state.currentActive = action.breakName;\n        prevActive = state.currentActive;\n      } else {\n        state[state.currentActive].isActive = false;\n        state['currentActive'] = action.breakName;\n        prevActive = state.currentActive;\n      }\n\n      return { ...state,\n        [action.breakName]: { ...state[action.breakName]\n        },\n        [prevActive]: { ...state.prevActive\n        }\n      };\n\n    case BreakButtonType.PAUSE_BREAK:\n      state[state.currentActive].isActive = false;\n      return { ...state,\n        [action.breakName]: { ...state[action.breakName]\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n_c = BreakButtonReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreakButtonReducer\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/breakButton/BreakButton.reducer.js"],"names":["BreakButtonType","INITIAL_STATE","instagram","isActive","time","faceBook","youtube","call","messaging","sleep","excercise","tea","food","releaseAll","currentActive","BreakButtonReducer","state","action","type","START_BREAK","prevActive","console","log","breakName","PAUSE_BREAK"],"mappings":"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","sourcesContent":["import BreakButtonType from './BreakButton.type';\n\nconst INITIAL_STATE={\n    instagram:{isActive:false,time:0},\n    faceBook:{isActive:false,time:0},\n    youtube:{isActive:false,time:0},\n    call:{isActive:false,time:0},\n    messaging:{isActive:false,time:0},\n    sleep:{isActive:false,time:0},\n    excercise:{isActive:false,time:0},\n    tea:{isActive:false,time:0},\n    food:{isActive:false,time:0},\n    releaseAll:{isActive:true,time:0},\n    currentActive:'releaseAll',\n    \n}\n\n\nexport const BreakButtonReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        \n        case BreakButtonType.START_BREAK:\n            let prevActive='';\n            console.log(state[action.breakName])\n            if(action.breakName!='releaseAll'){\n                state[state.currentActive].isActive=false;\n                state[action.breakName].isActive=true;\n                state.currentActive=action.breakName;\n                prevActive=state.currentActive;\n            }\n            else{\n                state[state.currentActive].isActive=false;\n                state['currentActive']=action.breakName;\n                prevActive=state.currentActive;\n            }\n            return{\n                ...state,\n                [action.breakName]:{...state[action.breakName]},\n                [prevActive]:{...state.prevActive}\n            }\n        case BreakButtonType.PAUSE_BREAK:\n            state[state.currentActive].isActive=false;\n            return{\n                ...state,\n                [action.breakName]:{...state[action.breakName]},\n            }\n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}