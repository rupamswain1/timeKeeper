{"ast":null,"code":"var _jsxFileName = \"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/doughnutChart/DoughnutChart.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Doughnut } from 'react-chartjs-2';\nimport './DoughnutChart.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DoughnutChart = () => {\n  _s();\n\n  const submitDataSelector = createSelector(state => state.SubmitDataReducer, submitDataReducer => submitDataReducer.data);\n  const submitDataSelectorKey = createSelector(state => state.SubmitDataReducer, submitDataReducer => submitDataReducer.key);\n  const data = useSelector(submitDataSelector);\n  const key = useSelector(submitDataSelectorKey);\n  let chartLabels = [];\n  let taskHour = [];\n  let bgColors = [];\n  let borderColors = []; //console.log(data[key]);\n  //console.log(Object.keys(data[key]).length)\n\n  if (Object.keys(data).length > 0) {\n    let obj = data[key].taskData;\n    console.log(obj);\n\n    for (var k in obj) {\n      chartLabels.push(k.toUpperCase());\n      taskHour.push((obj[k].time / 3600).toFixed(4));\n      bgColors.push(obj[k].color);\n      borderColors.push('rgb(0,0,0)');\n    }\n  }\n\n  console.log(taskHour);\n  console.log(bgColors);\n  const Doughnutdata = {\n    labels: chartLabels,\n    datasets: [{\n      label: '# of Votes',\n      data: taskHour,\n      backgroundColor: bgColors,\n      borderColor: borderColors,\n      borderWidth: 5,\n      hoverOffset: 20\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doughnutChartContainer\",\n    children: Object.keys(data).length > 0 && Object.keys(data[key]).length > 0 ? /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: Doughnutdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DoughnutChart, \"hm2FTcqi7vxptmAkUaFU34ARFHU=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = DoughnutChart;\nexport default DoughnutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/doughnutChart/DoughnutChart.component.jsx"],"names":["React","useSelector","Doughnut","DoughnutChart","submitDataSelector","createSelector","state","SubmitDataReducer","submitDataReducer","data","submitDataSelectorKey","key","chartLabels","taskHour","bgColors","borderColors","Object","keys","length","obj","taskData","console","log","k","push","toUpperCase","time","toFixed","color","Doughnutdata","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverOffset"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAO,4BAAP;;;AACA,MAAMC,aAAa,GAAC,MAAI;AAAA;;AACtB,QAAMC,kBAAkB,GAACC,cAAc,CAACC,KAAK,IAAEA,KAAK,CAACC,iBAAd,EACrCC,iBAAiB,IAAEA,iBAAiB,CAACC,IADA,CAAvC;AAEF,QAAMC,qBAAqB,GAACL,cAAc,CAACC,KAAK,IAAEA,KAAK,CAACC,iBAAd,EAClCC,iBAAiB,IAAEA,iBAAiB,CAACG,GADH,CAA1C;AAEA,QAAMF,IAAI,GAACR,WAAW,CAACG,kBAAD,CAAtB;AACA,QAAMO,GAAG,GAACV,WAAW,CAACS,qBAAD,CAArB;AACI,MAAIE,WAAW,GAAC,EAAhB;AACA,MAAIC,QAAQ,GAAC,EAAb;AACA,MAAIC,QAAQ,GAAC,EAAb;AACA,MAAIC,YAAY,GAAC,EAAjB,CAVoB,CAWpB;AACA;;AACA,MAAGC,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBS,MAAlB,GAAyB,CAA5B,EAA8B;AAC9B,QAAIC,GAAG,GAACV,IAAI,CAACE,GAAD,CAAJ,CAAUS,QAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,SAAI,IAAII,CAAR,IAAaJ,GAAb,EAAiB;AACbP,MAAAA,WAAW,CAACY,IAAZ,CAAiBD,CAAC,CAACE,WAAF,EAAjB;AAEAZ,MAAAA,QAAQ,CAACW,IAAT,CAAc,CAAEL,GAAG,CAACI,CAAD,CAAH,CAAOG,IAAR,GAAc,IAAf,EAAqBC,OAArB,CAA6B,CAA7B,CAAd;AACAb,MAAAA,QAAQ,CAACU,IAAT,CAAcL,GAAG,CAACI,CAAD,CAAH,CAAOK,KAArB;AACAb,MAAAA,YAAY,CAACS,IAAb,CAAkB,YAAlB;AACC;AACJ;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEA,QAAMe,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAElB,WADS;AAEjBmB,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,YADT;AAEEvB,MAAAA,IAAI,EAAEI,QAFR;AAGEoB,MAAAA,eAAe,EAAEnB,QAHnB;AAIEoB,MAAAA,WAAW,EAAEnB,YAJf;AAKEoB,MAAAA,WAAW,EAAE,CALf;AAMEC,MAAAA,WAAW,EAAE;AANf,KADQ;AAFO,GAArB;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cACKpB,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBS,MAAlB,GAAyB,CAAzB,IAA8BF,MAAM,CAACC,IAAP,CAAYR,IAAI,CAACE,GAAD,CAAhB,EAAuBO,MAAvB,GAA8B,CAA5D,gBACD,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEW;AAAhB;AAAA;AAAA;AAAA;AAAA,YADC,GAEA;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA/CD;;GAAM1B,a;UAKKF,W,EACDA,W;;;KANJE,a;AAiDN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Doughnut} from 'react-chartjs-2';\nimport './DoughnutChart.style.scss';\nconst DoughnutChart=()=>{\n  const submitDataSelector=createSelector(state=>state.SubmitDataReducer,\n    submitDataReducer=>submitDataReducer.data)\nconst submitDataSelectorKey=createSelector(state=>state.SubmitDataReducer,\n        submitDataReducer=>submitDataReducer.key)\nconst data=useSelector(submitDataSelector);\nconst key=useSelector(submitDataSelectorKey);\n    let chartLabels=[];\n    let taskHour=[];\n    let bgColors=[]\n    let borderColors=[]\n    //console.log(data[key]);\n    //console.log(Object.keys(data[key]).length)\n    if(Object.keys(data).length>0){\n    let obj=data[key].taskData;\n    console.log(obj)\n    for(var k in obj){\n        chartLabels.push(k.toUpperCase());\n        \n        taskHour.push(((obj[k].time)/3600).toFixed(4))\n        bgColors.push(obj[k].color)\n        borderColors.push('rgb(0,0,0)')\n        }\n    }\n    console.log(taskHour)\n    console.log(bgColors)\n   \n    const Doughnutdata = {\n        labels: chartLabels,\n        datasets: [\n          {\n            label: '# of Votes',\n            data: taskHour,\n            backgroundColor: bgColors,\n            borderColor: borderColors,\n            borderWidth: 5,\n            hoverOffset: 20\n          },\n        ],\n      };\n    return(\n        <div className='doughnutChartContainer'>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Doughnut data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default DoughnutChart;\n"]},"metadata":{},"sourceType":"module"}