{"ast":null,"code":"const ArrayToSeconds = timeArr => {\n  const hh = parseInt(timeArr[0]) * 10 + parseInt(timeArr[1]);\n  const mm = parseInt(timeArr[2]) * 10 + parseInt(timeArr[3]);\n  const ss = parseInt(timeArr[4]) * 10 + parseInt(timeArr[5]);\n  let seconds = hh * 3600 + mm * 60 + ss;\n  console.log(seconds);\n  return seconds;\n};\n\n_c = ArrayToSeconds;\nconsole.log(ArrayToSeconds([0, 0, 0, 1, 2, 0]));\n\nvar _c;\n\n$RefreshReg$(_c, \"ArrayToSeconds\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/logic/arrayToSeconds.js"],"names":["ArrayToSeconds","timeArr","hh","parseInt","mm","ss","seconds","console","log"],"mappings":"AACA,MAAMA,cAAc,GAAEC,OAAD,IAAW;AAC5B,QAAMC,EAAE,GAAEC,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,GAAqB,EAAtB,GAA0BE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAA3C;AACA,QAAMG,EAAE,GAAED,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,GAAqB,EAAtB,GAA0BE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAA3C;AACA,QAAMI,EAAE,GAAEF,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,GAAqB,EAAtB,GAA0BE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAA3C;AACA,MAAIK,OAAO,GAAEJ,EAAE,GAAC,IAAJ,GAAWE,EAAE,GAAC,EAAd,GAAmBC,EAA/B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAOA,OAAP;AACH,CAPD;;KAAMN,c;AASNO,OAAO,CAACC,GAAR,CAAYR,cAAc,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAD,CAA1B","sourcesContent":["\nconst ArrayToSeconds=(timeArr)=>{\n    const hh=(parseInt(timeArr[0])*10)+parseInt(timeArr[1]);\n    const mm=(parseInt(timeArr[2])*10)+parseInt(timeArr[3]);\n    const ss=(parseInt(timeArr[4])*10)+parseInt(timeArr[5]);\n    let seconds=(hh*3600)+(mm*60)+(ss);\n    console.log(seconds)\n    return(seconds)\n}\n\nconsole.log(ArrayToSeconds([0,0,0,1,2,0]));"]},"metadata":{},"sourceType":"module"}