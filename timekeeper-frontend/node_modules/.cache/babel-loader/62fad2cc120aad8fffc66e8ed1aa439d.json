{"ast":null,"code":"import TotalTimeType from './TotalTime.type';\nconst INITIAL_STATE = {\n  key: 0,\n  totalTime: {},\n  originalTime: {},\n  countDownProgress: false\n};\nexport const TotalTimeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TotalTimeType.SAVE_TOTAL_TIME:\n      state.key = Object.keys(state.totalTime).length;\n      let newDate = new Date();\n      let date = newDate.getDate();\n      let month = newDate.getMonth() + 1;\n      let year = newDate.getFullYear();\n      let fullDate = date.toString() + month.toString() + year.toString();\n      state.totalTime[state.key] = {\n        [fullDate]: action.payload\n      };\n      state.originalTime[state.key] = {\n        [fullDate]: action.payload\n      };\n      return { ...state,\n        key: state.key,\n        totalTime: { ...state.totalTime\n        },\n        originalTime: { ...state.originalTime\n        }\n      };\n\n    case TotalTimeType.START_COUNTDOWN:\n      state.countDownProgress = true;\n\n    default:\n      return state;\n  }\n};\n_c = TotalTimeReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalTimeReducer\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.reducer.js"],"names":["TotalTimeType","INITIAL_STATE","key","totalTime","originalTime","countDownProgress","TotalTimeReducer","state","action","type","SAVE_TOTAL_TIME","Object","keys","length","newDate","Date","date","getDate","month","getMonth","year","getFullYear","fullDate","toString","payload","START_COUNTDOWN"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,GAAG,EAAC,CADY;AAEhBC,EAAAA,SAAS,EAAC,EAFM;AAGhBC,EAAAA,YAAY,EAAC,EAHG;AAIhBC,EAAAA,iBAAiB,EAAC;AAJF,CAApB;AAOA,OAAO,MAAMC,gBAAgB,GAAC,CAACC,KAAK,GAACN,aAAP,EAAsBO,MAAtB,KAA+B;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,aAAa,CAACU,eAAnB;AACIH,MAAAA,KAAK,CAACL,GAAN,GAAUS,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACJ,SAAlB,EAA6BU,MAAvC;AACA,UAAIC,OAAO,GAAC,IAAIC,IAAJ,EAAZ;AACA,UAAIC,IAAI,GAAGF,OAAO,CAACG,OAAR,EAAX;AACA,UAAIC,KAAK,GAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAjC;AACA,UAAIC,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAX;AACA,UAAIC,QAAQ,GAACN,IAAI,CAACO,QAAL,KAAgBL,KAAK,CAACK,QAAN,EAAhB,GAAiCH,IAAI,CAACG,QAAL,EAA9C;AACAhB,MAAAA,KAAK,CAACJ,SAAN,CAAgBI,KAAK,CAACL,GAAtB,IAA2B;AAAC,SAACoB,QAAD,GAAWd,MAAM,CAACgB;AAAnB,OAA3B;AACAjB,MAAAA,KAAK,CAACH,YAAN,CAAmBG,KAAK,CAACL,GAAzB,IAA8B;AAAC,SAACoB,QAAD,GAAWd,MAAM,CAACgB;AAAnB,OAA9B;AACA,aAAM,EACF,GAAGjB,KADD;AAEFL,QAAAA,GAAG,EAACK,KAAK,CAACL,GAFR;AAGFC,QAAAA,SAAS,EAAC,EAAC,GAAGI,KAAK,CAACJ;AAAV,SAHR;AAIFC,QAAAA,YAAY,EAAC,EAAC,GAAGG,KAAK,CAACH;AAAV;AAJX,OAAN;;AAMJ,SAAKJ,aAAa,CAACyB,eAAnB;AACIlB,MAAAA,KAAK,CAACF,iBAAN,GAAwB,IAAxB;;AAGJ;AACI,aAAOE,KAAP;AArBR;AAuBH,CAxBM;KAAMD,gB","sourcesContent":["import TotalTimeType from './TotalTime.type';\n\nconst INITIAL_STATE={\n    key:0,\n    totalTime:{},\n    originalTime:{},\n    countDownProgress:false,\n}\n\nexport const TotalTimeReducer=(state=INITIAL_STATE, action)=>{\n    switch(action.type){\n        case TotalTimeType.SAVE_TOTAL_TIME:\n            state.key=Object.keys(state.totalTime).length;\n            let newDate=new Date()\n            let date = newDate.getDate();\n            let month = newDate.getMonth() + 1;\n            let year = newDate.getFullYear();\n            let fullDate=date.toString()+month.toString()+year.toString();\n            state.totalTime[state.key]={[fullDate]:action.payload}\n            state.originalTime[state.key]={[fullDate]:action.payload}\n            return{\n                ...state,\n                key:state.key,\n                totalTime:{...state.totalTime},\n                originalTime:{...state.originalTime},\n            }\n        case TotalTimeType.START_COUNTDOWN:\n            state.countDownProgress=true;\n\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}