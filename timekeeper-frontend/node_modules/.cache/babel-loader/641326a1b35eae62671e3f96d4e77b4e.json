{"ast":null,"code":"var _jsxFileName = \"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\nimport './timeComparisonBarChart.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeComparisonBarChart = () => {\n  _s();\n\n  const {\n    key,\n    data\n  } = useSelector(state => state.SubmitDataReducer); //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n\n  if (Object.keys(data).length > 0 && Object.keys(data[key]).length > 0) {\n    let chartLabels = [];\n    let taskHour = [];\n    let bgColors = [];\n    let borderColors = []; //console.log(data[key]);\n    //console.log(Object.keys(data[key]).length)\n\n    if (Object.keys(data).length > 0) {\n      let obj = data[key].taskData;\n      console.log(obj);\n\n      for (var k in obj) {\n        chartLabels.push(k.toUpperCase());\n        taskHour.push((obj[k].time / 3600).toFixed(4));\n        bgColors.push(obj[k].color);\n        borderColors.push('rgb(0,0,0)');\n      }\n    }\n\n    chartLabels.push('Estimated Total Time');\n    let TotalTimeReducer = data[key].totalTimeData;\n    let originalTimeKey = Object.keys(TotalTimeReducer.originalTime[TotalTimeReducer.key])[0];\n    taskHour.push((TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey] / 3600).toFixed(2));\n    bgColors.push('rgb(28,16,133)');\n    borderColors.push('rgb(0,0,0)');\n    let actualTime = 0;\n\n    if (TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey] < 0) {\n      actualTime = -1 * TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey] + TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey];\n    } else {\n      actualTime = TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey];\n    }\n\n    chartLabels.push('Actual Total Time');\n    taskHour.push((actualTime / 3600).toFixed(2));\n    bgColors.push('rgb(222, 11, 39)');\n    borderColors.push('rgb(0,0,0)');\n    const Doughnutdata = {\n      labels: chartLabels,\n      datasets: [{\n        label: 'Time Comparison Chart',\n        data: taskHour,\n        backgroundColor: bgColors,\n        borderColor: borderColors,\n        borderWidth: 5,\n        hoverOffset: 20\n      }]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeConparisonBarChartContainer\",\n    children: Object.keys(data).length > 0 && Object.keys(data[key]).length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: Doughnutdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TimeComparisonBarChart, \"oydWtUrdpbsDgJaYChJFpjNvfrQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = TimeComparisonBarChart;\nexport default TimeComparisonBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeComparisonBarChart\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js"],"names":["React","useSelector","Bar","TimeComparisonBarChart","key","data","state","SubmitDataReducer","Object","keys","length","chartLabels","taskHour","bgColors","borderColors","obj","taskData","console","log","k","push","toUpperCase","time","toFixed","color","TotalTimeReducer","totalTimeData","originalTimeKey","originalTime","actualTime","totalTime","Doughnutdata","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverOffset"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAO,qCAAP;;;AACA,MAAMC,sBAAsB,GAAC,MAAI;AAAA;;AAC7B,QAAM;AAACC,IAAAA,GAAD;AAAKC,IAAAA;AAAL,MAAWJ,WAAW,CAACK,KAAK,IAAEA,KAAK,CAACC,iBAAd,CAA5B,CAD6B,CAE7B;;AACA,MAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,GAAyB,CAAzB,IAA8BF,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACD,GAAD,CAAhB,EAAuBM,MAAvB,GAA8B,CAA/D,EAAkE;AAClE,QAAIC,WAAW,GAAC,EAAhB;AACA,QAAIC,QAAQ,GAAC,EAAb;AACA,QAAIC,QAAQ,GAAC,EAAb;AACA,QAAIC,YAAY,GAAC,EAAjB,CAJkE,CAKlE;AACA;;AACA,QAAGN,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,GAAyB,CAA5B,EAA8B;AAC9B,UAAIK,GAAG,GAACV,IAAI,CAACD,GAAD,CAAJ,CAAUY,QAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,WAAI,IAAII,CAAR,IAAaJ,GAAb,EAAiB;AACbJ,QAAAA,WAAW,CAACS,IAAZ,CAAiBD,CAAC,CAACE,WAAF,EAAjB;AAEAT,QAAAA,QAAQ,CAACQ,IAAT,CAAc,CAAEL,GAAG,CAACI,CAAD,CAAH,CAAOG,IAAR,GAAc,IAAf,EAAqBC,OAArB,CAA6B,CAA7B,CAAd;AACAV,QAAAA,QAAQ,CAACO,IAAT,CAAcL,GAAG,CAACI,CAAD,CAAH,CAAOK,KAArB;AACAV,QAAAA,YAAY,CAACM,IAAb,CAAkB,YAAlB;AACC;AACJ;;AACFT,IAAAA,WAAW,CAACS,IAAZ,CAAiB,sBAAjB;AACA,QAAIK,gBAAgB,GAACpB,IAAI,CAACD,GAAD,CAAJ,CAAUsB,aAA/B;AACA,QAAIC,eAAe,GAACnB,MAAM,CAACC,IAAP,CAAYgB,gBAAgB,CAACG,YAAjB,CAA8BH,gBAAgB,CAACrB,GAA/C,CAAZ,EAAiE,CAAjE,CAApB;AACAQ,IAAAA,QAAQ,CAACQ,IAAT,CAAc,CAACK,gBAAgB,CAACG,YAAjB,CAA8BH,gBAAgB,CAACrB,GAA/C,EAAoDuB,eAApD,IAAqE,IAAtE,EAA4EJ,OAA5E,CAAoF,CAApF,CAAd;AACAV,IAAAA,QAAQ,CAACO,IAAT,CAAc,gBAAd;AACAN,IAAAA,YAAY,CAACM,IAAb,CAAkB,YAAlB;AACA,QAAIS,UAAU,GAAC,CAAf;;AACA,QAAGJ,gBAAgB,CAACK,SAAjB,CAA2BL,gBAAgB,CAACrB,GAA5C,EAAiDuB,eAAjD,IAAkE,CAArE,EAAuE;AAClEE,MAAAA,UAAU,GAAE,CAAC,CAAD,GAAGJ,gBAAgB,CAACK,SAAjB,CAA2BL,gBAAgB,CAACrB,GAA5C,EAAiDuB,eAAjD,CAAJ,GAAuEF,gBAAgB,CAACG,YAAjB,CAA8BH,gBAAgB,CAACrB,GAA/C,EAAoDuB,eAApD,CAAlF;AACJ,KAFD,MAGI;AACAE,MAAAA,UAAU,GAACJ,gBAAgB,CAACK,SAAjB,CAA2BL,gBAAgB,CAACrB,GAA5C,EAAiDuB,eAAjD,CAAX;AACH;;AACDhB,IAAAA,WAAW,CAACS,IAAZ,CAAiB,mBAAjB;AACAR,IAAAA,QAAQ,CAACQ,IAAT,CAAc,CAACS,UAAU,GAAC,IAAZ,EAAkBN,OAAlB,CAA0B,CAA1B,CAAd;AACAV,IAAAA,QAAQ,CAACO,IAAT,CAAc,kBAAd;AACAN,IAAAA,YAAY,CAACM,IAAb,CAAkB,YAAlB;AACC,UAAMW,YAAY,GAAG;AACjBC,MAAAA,MAAM,EAAErB,WADS;AAEjBsB,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,uBADT;AAEE7B,QAAAA,IAAI,EAAEO,QAFR;AAGEuB,QAAAA,eAAe,EAAEtB,QAHnB;AAIEuB,QAAAA,WAAW,EAAEtB,YAJf;AAKEuB,QAAAA,WAAW,EAAE,CALf;AAMEC,QAAAA,WAAW,EAAE;AANf,OADQ;AAFO,KAArB;AAaC;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA,cACK9B,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,GAAyB,CAAzB,IAA8BF,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACD,GAAD,CAAhB,EAAuBM,MAAvB,GAA8B,CAA5D,gBACD,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEqB;AAAX;AAAA;AAAA;AAAA;AAAA,YADC,GAEA;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA3DD;;GAAM5B,sB;UACeF,W;;;KADfE,sB;AA6DN,eAAeA,sBAAf","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Bar} from 'react-chartjs-2';\nimport './timeComparisonBarChart.style.scss'\nconst TimeComparisonBarChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {\n    let chartLabels=[];\n    let taskHour=[];\n    let bgColors=[]\n    let borderColors=[]\n    //console.log(data[key]);\n    //console.log(Object.keys(data[key]).length)\n    if(Object.keys(data).length>0){\n    let obj=data[key].taskData;\n    console.log(obj)\n    for(var k in obj){\n        chartLabels.push(k.toUpperCase());\n        \n        taskHour.push(((obj[k].time)/3600).toFixed(4))\n        bgColors.push(obj[k].color)\n        borderColors.push('rgb(0,0,0)')\n        }\n    }\n   chartLabels.push('Estimated Total Time');\n   let TotalTimeReducer=data[key].totalTimeData\n   let originalTimeKey=Object.keys(TotalTimeReducer.originalTime[TotalTimeReducer.key])[0];\n   taskHour.push((TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]/3600).toFixed(2));\n   bgColors.push('rgb(28,16,133)');\n   borderColors.push('rgb(0,0,0)');\n   let actualTime=0;\n   if(TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey]<0){\n        actualTime=(-1*TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey])+TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]\n   }\n   else{\n       actualTime=TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey];\n   }\n   chartLabels.push('Actual Total Time');\n   taskHour.push((actualTime/3600).toFixed(2));\n   bgColors.push('rgb(222, 11, 39)');\n   borderColors.push('rgb(0,0,0)');\n    const Doughnutdata = {\n        labels: chartLabels,\n        datasets: [\n          {\n            label: 'Time Comparison Chart',\n            data: taskHour,\n            backgroundColor: bgColors,\n            borderColor: borderColors,\n            borderWidth: 5,\n            hoverOffset: 20\n          },\n        ],\n      };\n    }\n    return(\n        <div className='timeConparisonBarChartContainer'>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Bar data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeComparisonBarChart;\n"]},"metadata":{},"sourceType":"module"}