{"ast":null,"code":"export const ArrayToSeconds = timeArr => {\n  const hh = parseInt(timeArr[0]) * 10 + parseInt(timeArr[1]);\n  const mm = parseInt(timeArr[2]) * 10 + parseInt(timeArr[3]);\n  const ss = parseInt(timeArr[4]) * 10 + parseInt(timeArr[5]);\n  let seconds = hh * 3600 + mm * 60 + ss;\n  console.log(seconds);\n  return seconds;\n};\n_c = ArrayToSeconds;\n\nconst SecondsToArray = timeInSec => {\n  let totalSeconds = parseInt(timeInSec);\n  let hour = Math.floor(totalSeconds / 3600);\n  let hourSec = hour * 3600;\n  let minutes = Math.floor((totalSeconds - hourSec) / 60);\n  let seconds = totalSeconds - hourSec - minutes * 60;\n  let timeArr = [0, 0, 0, 0, 0, 0];\n\n  if (hour < 10) {\n    timeArr[1] = hour;\n  } else {\n    let strhour = hour.toString();\n    timeArr[0] = strhour.substr(0, 1);\n    timeArr[1] = strhour.substr(1);\n  }\n\n  console.log(timeArr);\n  return timeArr;\n};\n\n_c2 = SecondsToArray;\nconsole.log(SecondsToArray(3600));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ArrayToSeconds\");\n$RefreshReg$(_c2, \"SecondsToArray\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/logic/arrayToSeconds.js"],"names":["ArrayToSeconds","timeArr","hh","parseInt","mm","ss","seconds","console","log","SecondsToArray","timeInSec","totalSeconds","hour","Math","floor","hourSec","minutes","strhour","toString","substr"],"mappings":"AACA,OAAO,MAAMA,cAAc,GAAEC,OAAD,IAAW;AACnC,QAAMC,EAAE,GAAEC,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,GAAqB,EAAtB,GAA0BE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAA3C;AACA,QAAMG,EAAE,GAAED,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,GAAqB,EAAtB,GAA0BE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAA3C;AACA,QAAMI,EAAE,GAAEF,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAAR,GAAqB,EAAtB,GAA0BE,QAAQ,CAACF,OAAO,CAAC,CAAD,CAAR,CAA3C;AACA,MAAIK,OAAO,GAAEJ,EAAE,GAAC,IAAJ,GAAWE,EAAE,GAAC,EAAd,GAAmBC,EAA/B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAOA,OAAP;AACH,CAPM;KAAMN,c;;AASb,MAAMS,cAAc,GAAEC,SAAD,IAAa;AAC9B,MAAIC,YAAY,GAACR,QAAQ,CAACO,SAAD,CAAzB;AACA,MAAIE,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWH,YAAY,GAAC,IAAxB,CAAT;AACA,MAAII,OAAO,GAACH,IAAI,GAAC,IAAjB;AACA,MAAII,OAAO,GAACH,IAAI,CAACC,KAAL,CAAW,CAACH,YAAY,GAAEI,OAAf,IAAyB,EAApC,CAAZ;AACA,MAAIT,OAAO,GAACK,YAAY,GAAEI,OAAd,GAAwBC,OAAO,GAAC,EAA5C;AACA,MAAIf,OAAO,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAZ;;AAEA,MAAGW,IAAI,GAAC,EAAR,EAAW;AACPX,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAWW,IAAX;AACH,GAFD,MAGI;AACA,QAAIK,OAAO,GAACL,IAAI,CAACM,QAAL,EAAZ;AACAjB,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAWgB,OAAO,CAACE,MAAR,CAAe,CAAf,EAAiB,CAAjB,CAAX;AACAlB,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAWgB,OAAO,CAACE,MAAR,CAAe,CAAf,CAAX;AACH;;AACDZ,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA,SAAOA,OAAP;AACH,CAlBD;;MAAMQ,c;AAoBNF,OAAO,CAACC,GAAR,CAAYC,cAAc,CAAC,IAAD,CAA1B","sourcesContent":["\nexport const ArrayToSeconds=(timeArr)=>{\n    const hh=(parseInt(timeArr[0])*10)+parseInt(timeArr[1]);\n    const mm=(parseInt(timeArr[2])*10)+parseInt(timeArr[3]);\n    const ss=(parseInt(timeArr[4])*10)+parseInt(timeArr[5]);\n    let seconds=(hh*3600)+(mm*60)+(ss);\n    console.log(seconds)\n    return(seconds)\n}\n\nconst SecondsToArray=(timeInSec)=>{\n    let totalSeconds=parseInt(timeInSec);\n    let hour=Math.floor(totalSeconds/3600);\n    let hourSec=hour*3600;\n    let minutes=Math.floor((totalSeconds-(hourSec))/60);\n    let seconds=totalSeconds-(hourSec)-(minutes*60);\n    let timeArr=[0,0,0,0,0,0];\n    \n    if(hour<10){\n        timeArr[1]=hour;\n    }\n    else{\n        let strhour=hour.toString();\n        timeArr[0]=strhour.substr(0,1);\n        timeArr[1]=strhour.substr(1,);\n    }\n    console.log(timeArr);\n    return timeArr;\n}\n\nconsole.log(SecondsToArray(3600))\n\n\n"]},"metadata":{},"sourceType":"module"}