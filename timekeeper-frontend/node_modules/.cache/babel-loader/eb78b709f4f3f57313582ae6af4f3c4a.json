{"ast":null,"code":"import TaskType from './Task.type';\nimport { takeEvery, put, select } from 'redux-saga/effects'; //import {startTask} from '../task/Task.action';\n\nimport { setCountDownTrue, pauseCountDown } from '../totalTime/TotalTime.action';\n\nfunction* startTaskEffects({\n  type,\n  taskName,\n  seconds\n}) {\n  yield put(setCountDownTrue());\n}\n\nfunction* pauseTaskEffects({\n  type,\n  taskName\n}) {\n  yield put(pauseCountDown());\n}\n\nfunction* completeTaskEffects({\n  type,\n  taskName\n}) {\n  const taskReducer = select(state => state.TaskReducer);\n\n  if (taskReducer.activeTask === null) {\n    yield put(pauseCountDown());\n  }\n}\n\nexport function* startTask() {\n  yield takeEvery(TaskType.START_TASK, startTaskEffects);\n}\nexport function* pauseTask() {\n  yield takeEvery(TaskType.PAUSE_TASK, pauseTaskEffects);\n}\nexport function* completeTask() {\n  yield takeEvery(TaskType.COMPLETED_TASK, completeTaskEffects);\n}\nexport function* removeTask() {\n  yield takeEvery(TaskType.REMOVE_TASK, completeTaskEffects);\n}","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/task/Task.saga.js"],"names":["TaskType","takeEvery","put","select","setCountDownTrue","pauseCountDown","startTaskEffects","type","taskName","seconds","pauseTaskEffects","completeTaskEffects","taskReducer","state","TaskReducer","activeTask","startTask","START_TASK","pauseTask","PAUSE_TASK","completeTask","COMPLETED_TASK","removeTask","REMOVE_TASK"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,MAAtB,QAAmC,oBAAnC,C,CACA;;AACA,SAAQC,gBAAR,EAAyBC,cAAzB,QAA8C,+BAA9C;;AACA,UAAUC,gBAAV,CAA2B;AAACC,EAAAA,IAAD;AAAMC,EAAAA,QAAN;AAAeC,EAAAA;AAAf,CAA3B,EAAmD;AAE/C,QAAMP,GAAG,CAACE,gBAAgB,EAAjB,CAAT;AACH;;AAED,UAAUM,gBAAV,CAA2B;AAACH,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAA3B,EAA2C;AAEvC,QAAMN,GAAG,CAACG,cAAc,EAAf,CAAT;AACH;;AAED,UAAUM,mBAAV,CAA8B;AAACJ,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAA9B,EAA8C;AAC1C,QAAMI,WAAW,GAACT,MAAM,CAACU,KAAK,IAAEA,KAAK,CAACC,WAAd,CAAxB;;AACA,MAAGF,WAAW,CAACG,UAAZ,KAAyB,IAA5B,EAAiC;AAC7B,UAAMb,GAAG,CAACG,cAAc,EAAf,CAAT;AACH;AAEJ;;AAED,OAAO,UAAUW,SAAV,GAAqB;AACxB,QAAMf,SAAS,CAACD,QAAQ,CAACiB,UAAV,EAAsBX,gBAAtB,CAAf;AACH;AACD,OAAO,UAAUY,SAAV,GAAqB;AACxB,QAAMjB,SAAS,CAACD,QAAQ,CAACmB,UAAV,EAAsBT,gBAAtB,CAAf;AACH;AAED,OAAO,UAAUU,YAAV,GAAwB;AAC3B,QAAMnB,SAAS,CAACD,QAAQ,CAACqB,cAAV,EAAyBV,mBAAzB,CAAf;AACH;AAED,OAAO,UAAUW,UAAV,GAAsB;AACzB,QAAMrB,SAAS,CAACD,QAAQ,CAACuB,WAAV,EAAsBZ,mBAAtB,CAAf;AACH","sourcesContent":["import TaskType from './Task.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\n//import {startTask} from '../task/Task.action';\nimport {setCountDownTrue,pauseCountDown} from '../totalTime/TotalTime.action'\nfunction* startTaskEffects({type,taskName,seconds}){\n\n    yield put(setCountDownTrue());\n}\n\nfunction* pauseTaskEffects({type,taskName}){\n\n    yield put(pauseCountDown());\n}\n\nfunction* completeTaskEffects({type,taskName}){\n    const taskReducer=select(state=>state.TaskReducer)\n    if(taskReducer.activeTask===null){\n        yield put(pauseCountDown());\n    }\n    \n}\n\nexport function* startTask(){\n    yield takeEvery(TaskType.START_TASK, startTaskEffects)\n}\nexport function* pauseTask(){\n    yield takeEvery(TaskType.PAUSE_TASK, pauseTaskEffects)\n}\n\nexport function* completeTask(){\n    yield takeEvery(TaskType.COMPLETED_TASK,completeTaskEffects)\n}\n\nexport function* removeTask(){\n    yield takeEvery(TaskType.REMOVE_TASK,completeTaskEffects)\n}"]},"metadata":{},"sourceType":"module"}