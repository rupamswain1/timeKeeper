{"ast":null,"code":"var _jsxFileName = \"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\nimport './timeComparisonBarChart.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeComparisonBarChart = () => {\n  _s();\n\n  const {\n    key,\n    data\n  } = useSelector(state => state.SubmitDataReducer);\n  const TotalTimeReducer = useSelector(state => state.TotalTimeReducer);\n  let chartLabels = [];\n  let taskHour = [];\n  let bgColors = [];\n  let borderColors = []; //console.log(data[key]);\n  //console.log(Object.keys(data[key]).length)\n\n  if (Object.keys(data).length > 0) {\n    let obj = data[key].taskData;\n    console.log(obj);\n\n    for (var k in obj) {\n      chartLabels.push(k.toUpperCase());\n      taskHour.push((obj[k].time / 3600).toFixed(2));\n      bgColors.push(obj[k].color);\n      borderColors.push('rgb(0,0,0)');\n    }\n  }\n\n  chartLabels.push('Estimated Total Time');\n  let originalTimeKey = Object.keys(TotalTimeReducer.originalTime[TotalTimeReducer.key])[0];\n  taskHour.push((TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey] / 3600).toFixed(2));\n  bgColors.push('rgb(28,16,133)');\n  borderColors.push('rgb(0,0,0)');\n  let actualTime = 0;\n\n  if (TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey] < 0) {\n    actualTime = -1 * TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey] + TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey];\n  } else {\n    actualTime = TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey];\n  }\n\n  chartLabels.push('Actual Total Time');\n  taskHour.push((actualTime / 3600).toFixed(2));\n  bgColors.push('rgb(222, 11, 39)');\n  borderColors.push('rgb(0,0,0)');\n  const Doughnutdata = {\n    labels: chartLabels,\n    datasets: [{\n      label: 'Time Comparison Chart',\n      data: taskHour,\n      backgroundColor: bgColors,\n      borderColor: borderColors,\n      borderWidth: 5,\n      hoverOffset: 20\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeConparisonBarChartContainer\",\n    children: Object.keys(data[key]).length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: Doughnutdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TimeComparisonBarChart, \"lGMlPinGNSeurAzt9r43fiJfT9E=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = TimeComparisonBarChart;\nexport default TimeComparisonBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeComparisonBarChart\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js"],"names":["React","useSelector","Bar","TimeComparisonBarChart","key","data","state","SubmitDataReducer","TotalTimeReducer","chartLabels","taskHour","bgColors","borderColors","Object","keys","length","obj","taskData","console","log","k","push","toUpperCase","time","toFixed","color","originalTimeKey","originalTime","actualTime","totalTime","Doughnutdata","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverOffset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Bar} from 'react-chartjs-2';\nimport './timeComparisonBarChart.style.scss'\nconst TimeComparisonBarChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    const TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    let chartLabels=[];\n    let taskHour=[];\n    let bgColors=[]\n    let borderColors=[]\n    //console.log(data[key]);\n    //console.log(Object.keys(data[key]).length)\n    if(Object.keys(data).length>0){\n    let obj=data[key].taskData;\n    console.log(obj)\n    for(var k in obj){\n        chartLabels.push(k.toUpperCase());\n        \n        taskHour.push(((obj[k].time)/3600).toFixed(2))\n        bgColors.push(obj[k].color)\n        borderColors.push('rgb(0,0,0)')\n        }\n    }\n   chartLabels.push('Estimated Total Time');\n   let originalTimeKey=Object.keys(TotalTimeReducer.originalTime[TotalTimeReducer.key])[0];\n   taskHour.push((TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]/3600).toFixed(2));\n   bgColors.push('rgb(28,16,133)');\n   borderColors.push('rgb(0,0,0)');\n   let actualTime=0;\n   if(TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey]<0){\n        actualTime=(-1*TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey])+TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]\n   }\n   else{\n       actualTime=TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey];\n   }\n   chartLabels.push('Actual Total Time');\n   taskHour.push((actualTime/3600).toFixed(2));\n   bgColors.push('rgb(222, 11, 39)');\n   borderColors.push('rgb(0,0,0)');\n    const Doughnutdata = {\n        labels: chartLabels,\n        datasets: [\n          {\n            label: 'Time Comparison Chart',\n            data: taskHour,\n            backgroundColor: bgColors,\n            borderColor: borderColors,\n            borderWidth: 5,\n            hoverOffset: 20\n          },\n        ],\n      };\n    return(\n        <div className='timeConparisonBarChartContainer'>\n            {Object.keys(data[key]).length>0?\n            <Bar data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeComparisonBarChart;\n"]},"metadata":{},"sourceType":"module"}