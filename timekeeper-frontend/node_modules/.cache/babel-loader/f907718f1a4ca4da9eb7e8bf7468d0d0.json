{"ast":null,"code":"import TotalTimeType from './TotalTime.type';\nimport { GetDate } from '../../logic/getDate';\nconst INITIAL_STATE = {\n  key: 0,\n  totalTime: {},\n  originalTime: {},\n  countDownProgress: false\n};\nexport const TotalTimeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TotalTimeType.SAVE_TOTAL_TIME:\n      state.key = Object.keys(state.totalTime).length;\n      let fullDate = GetDate();\n      state.totalTime[state.key] = {\n        [fullDate]: action.payload\n      };\n      state.originalTime[state.key] = {\n        [fullDate]: action.payload\n      };\n      return { ...state,\n        key: state.key,\n        totalTime: { ...state.totalTime\n        },\n        originalTime: { ...state.originalTime\n        }\n      };\n\n    case TotalTimeType.START_COUNTDOWN:\n      let dateTime = GetDate();\n      state.totalTime[state.key][dateTime] = state.totalTime[state.key][dateTime] - parseInt(action.seconds);\n      return { ...state,\n        totalTime: { ...state.totalTime\n        },\n        countDownProgress: true\n      };\n\n    case TotalTimeType.PAUSE_COUNTDOWN:\n      state.countDownProgress = false;\n      return { ...state,\n        countDownProgress: false\n      };\n\n    case TotalTimeType.SET_COUNTDOWN_TRUE:\n      return { ...state,\n        countDownProgress: true\n      };\n\n    case TotalTimeType.UPDATE_COUNTDOWN:\n      return state;\n\n    case TotalTimeType.REMOVE_ALL_TIME:\n      return {\n        key: 0,\n        totalTime: {},\n        originalTime: {},\n        countDownProgress: false\n      };\n\n    default:\n      return state;\n  }\n};\n_c = TotalTimeReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalTimeReducer\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/redux/totalTime/TotalTime.reducer.js"],"names":["TotalTimeType","GetDate","INITIAL_STATE","key","totalTime","originalTime","countDownProgress","TotalTimeReducer","state","action","type","SAVE_TOTAL_TIME","Object","keys","length","fullDate","payload","START_COUNTDOWN","dateTime","parseInt","seconds","PAUSE_COUNTDOWN","SET_COUNTDOWN_TRUE","UPDATE_COUNTDOWN","REMOVE_ALL_TIME"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AACA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,GAAG,EAAC,CADY;AAEhBC,EAAAA,SAAS,EAAC,EAFM;AAGhBC,EAAAA,YAAY,EAAC,EAHG;AAIhBC,EAAAA,iBAAiB,EAAC;AAJF,CAApB;AAOA,OAAO,MAAMC,gBAAgB,GAAC,CAACC,KAAK,GAACN,aAAP,EAAsBO,MAAtB,KAA+B;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,aAAa,CAACW,eAAnB;AACIH,MAAAA,KAAK,CAACL,GAAN,GAAUS,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACJ,SAAlB,EAA6BU,MAAvC;AAEA,UAAIC,QAAQ,GAACd,OAAO,EAApB;AACAO,MAAAA,KAAK,CAACJ,SAAN,CAAgBI,KAAK,CAACL,GAAtB,IAA2B;AAAC,SAACY,QAAD,GAAWN,MAAM,CAACO;AAAnB,OAA3B;AACAR,MAAAA,KAAK,CAACH,YAAN,CAAmBG,KAAK,CAACL,GAAzB,IAA8B;AAAC,SAACY,QAAD,GAAWN,MAAM,CAACO;AAAnB,OAA9B;AACA,aAAM,EACF,GAAGR,KADD;AAEFL,QAAAA,GAAG,EAACK,KAAK,CAACL,GAFR;AAGFC,QAAAA,SAAS,EAAC,EAAC,GAAGI,KAAK,CAACJ;AAAV,SAHR;AAIFC,QAAAA,YAAY,EAAC,EAAC,GAAGG,KAAK,CAACH;AAAV;AAJX,OAAN;;AAMJ,SAAKL,aAAa,CAACiB,eAAnB;AAEI,UAAIC,QAAQ,GAACjB,OAAO,EAApB;AACAO,MAAAA,KAAK,CAACJ,SAAN,CAAgBI,KAAK,CAACL,GAAtB,EAA2Be,QAA3B,IAAqCV,KAAK,CAACJ,SAAN,CAAgBI,KAAK,CAACL,GAAtB,EAA2Be,QAA3B,IAAqCC,QAAQ,CAACV,MAAM,CAACW,OAAR,CAAlF;AACA,aAAM,EACF,GAAGZ,KADD;AAEFJ,QAAAA,SAAS,EAAC,EAAC,GAAGI,KAAK,CAACJ;AAAV,SAFR;AAGFE,QAAAA,iBAAiB,EAAC;AAHhB,OAAN;;AAKJ,SAAKN,aAAa,CAACqB,eAAnB;AACIb,MAAAA,KAAK,CAACF,iBAAN,GAAwB,KAAxB;AACA,aAAM,EACF,GAAGE,KADD;AAEFF,QAAAA,iBAAiB,EAAC;AAFhB,OAAN;;AAIJ,SAAKN,aAAa,CAACsB,kBAAnB;AACI,aAAM,EACF,GAAGd,KADD;AAEFF,QAAAA,iBAAiB,EAAC;AAFhB,OAAN;;AAIJ,SAAKN,aAAa,CAACuB,gBAAnB;AACI,aAAOf,KAAP;;AACJ,SAAKR,aAAa,CAACwB,eAAnB;AACI,aAAM;AACFrB,QAAAA,GAAG,EAAC,CADF;AAEFC,QAAAA,SAAS,EAAC,EAFR;AAGFC,QAAAA,YAAY,EAAC,EAHX;AAIFC,QAAAA,iBAAiB,EAAC;AAJhB,OAAN;;AAMJ;AACI,aAAOE,KAAP;AA3CR;AA6CH,CA9CM;KAAMD,gB","sourcesContent":["import TotalTimeType from './TotalTime.type';\nimport {GetDate} from '../../logic/getDate';\nconst INITIAL_STATE={\n    key:0,\n    totalTime:{},\n    originalTime:{},\n    countDownProgress:false,\n}\n\nexport const TotalTimeReducer=(state=INITIAL_STATE, action)=>{\n    switch(action.type){\n        case TotalTimeType.SAVE_TOTAL_TIME:\n            state.key=Object.keys(state.totalTime).length;\n            \n            let fullDate=GetDate()\n            state.totalTime[state.key]={[fullDate]:action.payload}\n            state.originalTime[state.key]={[fullDate]:action.payload}\n            return{\n                ...state,\n                key:state.key,\n                totalTime:{...state.totalTime},\n                originalTime:{...state.originalTime},\n            }\n        case TotalTimeType.START_COUNTDOWN:\n            \n            let dateTime=GetDate();\n            state.totalTime[state.key][dateTime]=state.totalTime[state.key][dateTime]-parseInt(action.seconds);\n            return{\n                ...state,\n                totalTime:{...state.totalTime},\n                countDownProgress:true,\n            }\n        case TotalTimeType.PAUSE_COUNTDOWN:\n            state.countDownProgress=false;\n            return{\n                ...state,\n                countDownProgress:false,\n            }\n        case TotalTimeType.SET_COUNTDOWN_TRUE:\n            return{\n                ...state,\n                countDownProgress:true,\n            }\n        case TotalTimeType.UPDATE_COUNTDOWN:\n            return state;\n        case TotalTimeType.REMOVE_ALL_TIME:\n            return{\n                key:0,\n                totalTime:{},\n                originalTime:{},\n                countDownProgress:false,\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}