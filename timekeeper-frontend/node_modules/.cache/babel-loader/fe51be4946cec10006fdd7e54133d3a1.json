{"ast":null,"code":"var _jsxFileName = \"/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/completedTaskListContainer/CompletedTaskListContainer.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport './CompletedTaskListContainer.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CompletedTaskListContainer = () => {\n  _s();\n\n  const {\n    taskList\n  } = useSelector(state => state.TaskReducer);\n  const {\n    key,\n    originalTime,\n    totalTime\n  } = useSelector(state => state.TotalTimeRe);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: totalTime[key] ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completedTaskListMainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"headingCompleted\",\n        children: \"Completed Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completedTaskListContainer\",\n        children: Object.keys(taskList).map(key => {\n          return taskList[key].isCompleted ? /*#__PURE__*/_jsxDEV(AddedTask, {\n            type: taskList[key].type,\n            completed: taskList[key].isCompleted,\n            bgColor: taskList[key].color,\n            taskName: key,\n            paused: taskList[key].paused,\n            percentage: taskList[key].percentage\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 22\n          }, this) : '';\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : ''\n  }, void 0, false);\n};\n\n_s(CompletedTaskListContainer, \"8yGI/hxbi2f2POa8OqTRKwuzrgs=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = CompletedTaskListContainer;\nexport default CompletedTaskListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompletedTaskListContainer\");","map":{"version":3,"sources":["/home/rupam/Documents/Development/Timekeeper/timekeeper-frontend/src/components/completedTaskListContainer/CompletedTaskListContainer.component.jsx"],"names":["React","useSelector","AddedTask","CompletedTaskListContainer","taskList","state","TaskReducer","key","originalTime","totalTime","TotalTimeRe","Object","keys","map","isCompleted","type","color","paused","percentage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAO,yCAAP;;;;AAEA,MAAMC,0BAA0B,GAAC,MAAI;AAAA;;AACjC,QAAM;AAACC,IAAAA;AAAD,MAAWH,WAAW,CAACI,KAAK,IAAEA,KAAK,CAACC,WAAd,CAA5B;AACA,QAAM;AAACC,IAAAA,GAAD;AAAKC,IAAAA,YAAL;AAAkBC,IAAAA;AAAlB,MAA6BR,WAAW,CAACI,KAAK,IAAEA,KAAK,CAACK,WAAd,CAA9C;AACA,sBACI;AAAA,cACCD,SAAS,CAACF,GAAD,CAAT,gBACD;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,kBAECI,MAAM,CAACC,IAAP,CAAYR,QAAZ,EAAsBS,GAAtB,CAA2BN,GAAD,IACvB;AAAI,iBACAH,QAAQ,CAACG,GAAD,CAAR,CAAcO,WAAd,gBACC,QAAC,SAAD;AAAqB,YAAA,IAAI,EAAEV,QAAQ,CAACG,GAAD,CAAR,CAAcQ,IAAzC;AAA+C,YAAA,SAAS,EAAEX,QAAQ,CAACG,GAAD,CAAR,CAAcO,WAAxE;AAAqF,YAAA,OAAO,EAAEV,QAAQ,CAACG,GAAD,CAAR,CAAcS,KAA5G;AAAmH,YAAA,QAAQ,EAAET,GAA7H;AAAkI,YAAA,MAAM,EAAEH,QAAQ,CAACG,GAAD,CAAR,CAAcU,MAAxJ;AAAgK,YAAA,UAAU,EAAEb,QAAQ,CAACG,GAAD,CAAR,CAAcW;AAA1L,aAAgBX,GAAhB;AAAA;AAAA;AAAA;AAAA,kBADD,GAEC,EAHD;AAMH,SAPJ;AAFD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,GAiBA;AAlBD,mBADJ;AAsBH,CAzBD;;GAAMJ,0B;UACeF,W,EACkBA,W;;;KAFjCE,0B;AA0BN,eAAeA,0BAAf","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport './CompletedTaskListContainer.style.scss'\n\nconst CompletedTaskListContainer=()=>{\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,originalTime,totalTime}=useSelector(state=>state.TotalTimeRe);\n    return(\n        <>\n        {totalTime[key]?\n        <div className='completedTaskListMainContainer'>\n            <span className='headingCompleted'>Completed Task List</span>\n            <div className='completedTaskListContainer'>\n\n            {Object.keys(taskList).map((key)=>\n                {   return(\n                    taskList[key].isCompleted?\n                    (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage}/>)\n                    :''\n                    \n                    )\n                }    \n                )\n            }          \n            </div>\n        </div>\n        :''}\n        </>\n    )\n}\nexport default CompletedTaskListContainer;"]},"metadata":{},"sourceType":"module"}